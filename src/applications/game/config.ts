// @ts-ignore
import FastNoiseLite from "fastnoise-lite";

const CHUNK_WIDTH = 32;
const CHUNK_HEIGHT = 32;
const CHUNK_LENGTH = 32;

// In each direction;

const GENERATION_FREQUENCY_MULTIPLIER = 0.6;

// const NEGATIVE_X_RENDER_DISTANCE = 8;
// const POSITIVE_X_RENDER_DISTANCE = 8;
// const POSITIVE_Y_RENDER_DISTANCE = 3;
// const NEGATIVE_Y_RENDER_DISTANCE = 2;
// const NEGATIVE_Z_RENDER_DISTANCE = 8;
// const POSITIVE_Z_RENDER_DISTANCE = 8;

// const NEGATIVE_X_RENDER_DISTANCE = 4;
// const POSITIVE_X_RENDER_DISTANCE = 4;
// const POSITIVE_Y_RENDER_DISTANCE = 3;
// const NEGATIVE_Y_RENDER_DISTANCE = 2;
// const NEGATIVE_Z_RENDER_DISTANCE = 4;
// const POSITIVE_Z_RENDER_DISTANCE = 4;

const NEGATIVE_X_RENDER_DISTANCE = 3;
const POSITIVE_X_RENDER_DISTANCE = 3;
const POSITIVE_Y_RENDER_DISTANCE = 3;
const NEGATIVE_Y_RENDER_DISTANCE = 2;
const NEGATIVE_Z_RENDER_DISTANCE = 3;
const POSITIVE_Z_RENDER_DISTANCE = 3;

const CHUNK_PRUNING_DISTANCE = Math.floor(
  (NEGATIVE_X_RENDER_DISTANCE + POSITIVE_X_RENDER_DISTANCE) * 1.25
);

const TEXTURE_SIZE = 16;

export {
  CHUNK_WIDTH,
  CHUNK_HEIGHT,
  CHUNK_LENGTH,
  NEGATIVE_X_RENDER_DISTANCE,
  POSITIVE_X_RENDER_DISTANCE,
  POSITIVE_Y_RENDER_DISTANCE,
  NEGATIVE_Y_RENDER_DISTANCE,
  NEGATIVE_Z_RENDER_DISTANCE,
  POSITIVE_Z_RENDER_DISTANCE,
  GENERATION_FREQUENCY_MULTIPLIER,
  CHUNK_PRUNING_DISTANCE,
  TEXTURE_SIZE,
};
